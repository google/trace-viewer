// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

/**
 * WARNING: This file is generated by generate_deps_js_contents.py
 *
 *        Do not edit directly.
 */
base.addModuleDependency(
    'analysis.single_slice_selection_analysis',
    'ui');
base.addModuleDependency(
    'analysis.single_slice_selection_analysis',
    'analysis.util');
base.addModuleDependency(
    'analysis.slice_group_selection_analysis',
    'ui');
base.addModuleDependency(
    'analysis.slice_group_selection_analysis',
    'analysis.util');
base.addModuleDependency(
    'analysis.slice_selection_analysis',
    'analysis.single_slice_selection_analysis');
base.addModuleDependency(
    'analysis.slice_selection_analysis',
    'analysis.slice_group_selection_analysis');
base.addModuleDependency(
    'analysis.single_counter_selection_analysis',
    'ui');
base.addModuleDependency(
    'analysis.single_counter_selection_analysis',
    'analysis.util');
base.addModuleDependency(
    'analysis.counter_selection_analysis',
    'ui');
base.addModuleDependency(
    'analysis.counter_selection_analysis',
    'analysis.single_counter_selection_analysis');
base.addModuleDependency(
    'analysis.selection_analysis',
    'analysis.slice_selection_analysis');
base.addModuleDependency(
    'analysis.selection_analysis',
    'analysis.counter_selection_analysis');
base.addModuleDependency(
    'analysis.selection_analysis',
    'ui');
base.addModuleStylesheet(
    'analysis.selection_analysis',
    'analysis.selection_analysis');
base.addModuleDependency(
    'slice_group',
    'range');
base.addModuleDependency(
    'slice_group',
    'slice');
base.addModuleDependency(
    'slice_group',
    'color_scheme');
base.addModuleDependency(
    'slice_group',
    'filter');
base.addModuleDependency(
    'async_slice_group',
    'range');
base.addModuleDependency(
    'async_slice_group',
    'slice');
base.addModuleDependency(
    'thread',
    'range');
base.addModuleDependency(
    'thread',
    'guid');
base.addModuleDependency(
    'thread',
    'slice');
base.addModuleDependency(
    'thread',
    'slice_group');
base.addModuleDependency(
    'thread',
    'async_slice_group');
base.addModuleDependency(
    'thread',
    'sample');
base.addModuleDependency(
    'counter',
    'guid');
base.addModuleDependency(
    'counter',
    'range');
base.addModuleDependency(
    'process_base',
    'range');
base.addModuleDependency(
    'process_base',
    'guid');
base.addModuleDependency(
    'process_base',
    'thread');
base.addModuleDependency(
    'process_base',
    'counter');
base.addModuleDependency(
    'process',
    'process_base');
base.addModuleDependency(
    'kernel',
    'process_base');
base.addModuleDependency(
    'cpu',
    'range');
base.addModuleDependency(
    'cpu',
    'slice');
base.addModuleDependency(
    'cpu',
    'counter');
base.addModuleDependency(
    'model',
    'range');
base.addModuleDependency(
    'model',
    'event_target');
base.addModuleDependency(
    'model',
    'process');
base.addModuleDependency(
    'model',
    'kernel');
base.addModuleDependency(
    'model',
    'cpu');
base.addModuleDependency(
    'model',
    'filter');
base.addModuleDependency(
    'selection',
    'range');
base.addModuleDependency(
    'selection',
    'event_target');
base.addModuleDependency(
    'tracks.track',
    'ui');
base.addModuleStylesheet(
    'tracks.track',
    'tracks.track');
base.addModuleDependency(
    'tracks.container_track',
    'tracks.track');
base.addModuleDependency(
    'tracks.container_track',
    'filter');
base.addModuleDependency(
    'tracks.container_track',
    'ui');
base.addModuleDependency(
    'tracks.canvas_based_track',
    'tracks.track');
base.addModuleDependency(
    'tracks.canvas_based_track',
    'fast_rect_renderer');
base.addModuleDependency(
    'tracks.canvas_based_track',
    'color_scheme');
base.addModuleDependency(
    'tracks.canvas_based_track',
    'ui');
base.addModuleStylesheet(
    'tracks.canvas_based_track',
    'tracks.canvas_based_track');
base.addModuleDependency(
    'tracks.slice_track',
    'tracks.canvas_based_track');
base.addModuleDependency(
    'tracks.slice_track',
    'sorted_array_utils');
base.addModuleDependency(
    'tracks.slice_track',
    'fast_rect_renderer');
base.addModuleDependency(
    'tracks.slice_track',
    'color_scheme');
base.addModuleDependency(
    'tracks.slice_track',
    'ui');
base.addModuleStylesheet(
    'tracks.slice_track',
    'tracks.slice_track');
base.addModuleDependency(
    'tracks.slice_group_track',
    'tracks.container_track');
base.addModuleDependency(
    'tracks.slice_group_track',
    'sorted_array_utils');
base.addModuleDependency(
    'tracks.slice_group_track',
    'ui');
base.addModuleDependency(
    'tracks.async_slice_group_track',
    'tracks.slice_group_track');
base.addModuleDependency(
    'tracks.async_slice_group_track',
    'ui');
base.addModuleDependency(
    'tracks.thread_track',
    'tracks.container_track');
base.addModuleDependency(
    'tracks.thread_track',
    'tracks.slice_track');
base.addModuleDependency(
    'tracks.thread_track',
    'tracks.slice_group_track');
base.addModuleDependency(
    'tracks.thread_track',
    'tracks.async_slice_group_track');
base.addModuleDependency(
    'tracks.thread_track',
    'filter');
base.addModuleDependency(
    'tracks.thread_track',
    'ui');
base.addModuleStylesheet(
    'tracks.thread_track',
    'tracks.thread_track');
base.addModuleDependency(
    'tracks.counter_track',
    'tracks.canvas_based_track');
base.addModuleDependency(
    'tracks.counter_track',
    'color_scheme');
base.addModuleDependency(
    'tracks.counter_track',
    'ui');
base.addModuleStylesheet(
    'tracks.counter_track',
    'tracks.counter_track');
base.addModuleDependency(
    'analysis.test.analysis_test_support',
    'test_utils');
base.addModuleDependency(
    'analysis.test.analysis_test_support',
    'model');
base.addModuleDependency(
    'analysis.test.analysis_test_support',
    'selection');
base.addModuleDependency(
    'analysis.test.analysis_test_support',
    'tracks.thread_track');
base.addModuleDependency(
    'analysis.test.analysis_test_support',
    'tracks.counter_track');
base.addModuleDependency(
    'importer.timeline_stream_importer',
    'model');
base.addModuleDependency(
    'importer.timeline_stream_importer',
    'slice');
base.addModuleDependency(
    'timeline_viewport',
    'event_target');
base.addModuleDependency(
    'tracks.cpu_track',
    'tracks.container_track');
base.addModuleDependency(
    'tracks.cpu_track',
    'tracks.slice_track');
base.addModuleDependency(
    'tracks.cpu_track',
    'filter');
base.addModuleDependency(
    'tracks.cpu_track',
    'model');
base.addModuleDependency(
    'tracks.cpu_track',
    'ui');
base.addModuleDependency(
    'tracks.process_track',
    'tracks.container_track');
base.addModuleDependency(
    'tracks.process_track',
    'tracks.counter_track');
base.addModuleDependency(
    'tracks.process_track',
    'tracks.thread_track');
base.addModuleDependency(
    'tracks.process_track',
    'filter');
base.addModuleDependency(
    'tracks.process_track',
    'ui');
base.addModuleDependency(
    'tracks.model_track',
    'tracks.container_track');
base.addModuleDependency(
    'tracks.model_track',
    'tracks.cpu_track');
base.addModuleDependency(
    'tracks.model_track',
    'tracks.process_track');
base.addModuleDependency(
    'tracks.model_track',
    'ui');
base.addModuleStylesheet(
    'tracks.model_track',
    'tracks.model_track');
base.addModuleDependency(
    'tracks.viewport_track',
    'tracks.track');
base.addModuleDependency(
    'tracks.viewport_track',
    'tracks.canvas_based_track');
base.addModuleDependency(
    'tracks.viewport_track',
    'ui');
base.addModuleStylesheet(
    'tracks.viewport_track',
    'tracks.viewport_track');
base.addModuleDependency(
    'timeline',
    'event_target');
base.addModuleDependency(
    'timeline',
    'measuring_stick');
base.addModuleDependency(
    'timeline',
    'filter');
base.addModuleDependency(
    'timeline',
    'selection');
base.addModuleDependency(
    'timeline',
    'timeline_viewport');
base.addModuleDependency(
    'timeline',
    'tracks.model_track');
base.addModuleDependency(
    'timeline',
    'tracks.viewport_track');
base.addModuleDependency(
    'timeline',
    'ui');
base.addModuleStylesheet(
    'timeline',
    'timeline');
base.addModuleDependency(
    'timeline_analysis_view',
    'analysis.util');
base.addModuleDependency(
    'timeline_analysis_view',
    'ui');
base.addModuleStylesheet(
    'timeline_analysis_view',
    'timeline_analysis_view');
base.addModuleDependency(
    'overlay',
    'ui');
base.addModuleDependency(
    'overlay',
    'event_target');
base.addModuleStylesheet(
    'overlay',
    'overlay');
base.addModuleDependency(
    'category_filter_dialog',
    'filter');
base.addModuleDependency(
    'category_filter_dialog',
    'overlay');
base.addModuleDependency(
    'find_control',
    'timeline');
base.addModuleDependency(
    'find_control',
    'filter');
base.addModuleDependency(
    'find_control',
    'overlay');
base.addModuleDependency(
    'importer.trace_event_importer',
    'model');
base.addModuleDependency(
    'importer.trace_event_importer',
    'color_scheme');
base.addModuleDependency(
    'importer.linux_perf.bus_parser',
    'importer.linux_perf.parser');
base.addModuleDependency(
    'importer.linux_perf.clock_parser',
    'importer.linux_perf.parser');
base.addModuleDependency(
    'importer.linux_perf.cpufreq_parser',
    'importer.linux_perf.parser');
base.addModuleDependency(
    'importer.linux_perf.drm_parser',
    'importer.linux_perf.parser');
base.addModuleDependency(
    'importer.linux_perf.exynos_parser',
    'importer.linux_perf.parser');
base.addModuleDependency(
    'importer.linux_perf.gesture_parser',
    'importer.linux_perf.parser');
base.addModuleDependency(
    'importer.linux_perf.i915_parser',
    'importer.linux_perf.parser');
base.addModuleDependency(
    'importer.linux_perf.mali_parser',
    'importer.linux_perf.parser');
base.addModuleDependency(
    'importer.linux_perf.power_parser',
    'importer.linux_perf.parser');
base.addModuleDependency(
    'importer.linux_perf.sched_parser',
    'importer.linux_perf.parser');
base.addModuleDependency(
    'importer.linux_perf.workqueue_parser',
    'importer.linux_perf.parser');
base.addModuleDependency(
    'importer.linux_perf.android_parser',
    'importer.linux_perf.parser');
base.addModuleDependency(
    'importer.linux_perf_importer',
    'model');
base.addModuleDependency(
    'importer.linux_perf_importer',
    'color_scheme');
base.addModuleDependency(
    'importer.linux_perf_importer',
    'importer.linux_perf.bus_parser');
base.addModuleDependency(
    'importer.linux_perf_importer',
    'importer.linux_perf.clock_parser');
base.addModuleDependency(
    'importer.linux_perf_importer',
    'importer.linux_perf.cpufreq_parser');
base.addModuleDependency(
    'importer.linux_perf_importer',
    'importer.linux_perf.drm_parser');
base.addModuleDependency(
    'importer.linux_perf_importer',
    'importer.linux_perf.exynos_parser');
base.addModuleDependency(
    'importer.linux_perf_importer',
    'importer.linux_perf.gesture_parser');
base.addModuleDependency(
    'importer.linux_perf_importer',
    'importer.linux_perf.i915_parser');
base.addModuleDependency(
    'importer.linux_perf_importer',
    'importer.linux_perf.mali_parser');
base.addModuleDependency(
    'importer.linux_perf_importer',
    'importer.linux_perf.power_parser');
base.addModuleDependency(
    'importer.linux_perf_importer',
    'importer.linux_perf.sched_parser');
base.addModuleDependency(
    'importer.linux_perf_importer',
    'importer.linux_perf.workqueue_parser');
base.addModuleDependency(
    'importer.linux_perf_importer',
    'importer.linux_perf.android_parser');
base.addModuleDependency(
    'timeline_view',
    'timeline');
base.addModuleDependency(
    'timeline_view',
    'timeline_analysis_view');
base.addModuleDependency(
    'timeline_view',
    'category_filter_dialog');
base.addModuleDependency(
    'timeline_view',
    'filter');
base.addModuleDependency(
    'timeline_view',
    'find_control');
base.addModuleDependency(
    'timeline_view',
    'overlay');
base.addModuleDependency(
    'timeline_view',
    'importer.trace_event_importer');
base.addModuleDependency(
    'timeline_view',
    'importer.linux_perf_importer');
base.addModuleDependency(
    'timeline_view',
    'settings');
base.addModuleStylesheet(
    'timeline_view',
    'timeline_view');
base.addModuleDependency(
    'tracing_controller',
    'event_target');
base.addModuleStylesheet(
    'tracing_controller',
    'tracing_controller');
base.addModuleDependency(
    'profiling_view',
    'timeline_view');
base.addModuleDependency(
    'profiling_view',
    'tracing_controller');
base.addModuleStylesheet(
    'profiling_view',
    'profiling_view');
base.addModuleStylesheet(
    'unittest',
    'unittest');
