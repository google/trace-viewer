// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

/**
// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

* WARNING: This file is generated by generate_about_tracing_contents.py
*
*        Do not edit directly.
*/

window.FLATTENED = {};
window.FLATTENED['base'] = true;
window.FLATTENED['event_target'] = true;
window.FLATTENED['measuring_stick'] = true;
window.FLATTENED['timeline_filter'] = true;
window.FLATTENED['range'] = true;
window.FLATTENED['timeline_selection'] = true;
window.FLATTENED['timeline_viewport'] = true;
window.FLATTENED['ui'] = true;
window.FLATTENED['tracks.timeline_track'] = true;
window.FLATTENED['tracks.timeline_container_track'] = true;
window.FLATTENED['fast_rect_renderer'] = true;
window.FLATTENED['timeline_color_scheme'] = true;
window.FLATTENED['tracks.timeline_canvas_based_track'] = true;
window.FLATTENED['sorted_array_utils'] = true;
window.FLATTENED['tracks.timeline_slice_track'] = true;
window.FLATTENED['timeline_guid'] = true;
window.FLATTENED['timeline_slice'] = true;
window.FLATTENED['timeline_slice_group'] = true;
window.FLATTENED['timeline_async_slice_group'] = true;
window.FLATTENED['timeline_sample'] = true;
window.FLATTENED['timeline_thread'] = true;
window.FLATTENED['timeline_counter'] = true;
window.FLATTENED['timeline_process_base'] = true;
window.FLATTENED['timeline_process'] = true;
window.FLATTENED['timeline_kernel'] = true;
window.FLATTENED['timeline_cpu'] = true;
window.FLATTENED['timeline_model'] = true;
window.FLATTENED['tracks.timeline_cpu_track'] = true;
window.FLATTENED['tracks.timeline_counter_track'] = true;
window.FLATTENED['tracks.timeline_slice_group_track'] = true;
window.FLATTENED['tracks.timeline_async_slice_group_track'] = true;
window.FLATTENED['tracks.timeline_thread_track'] = true;
window.FLATTENED['tracks.timeline_process_track'] = true;
window.FLATTENED['tracks.timeline_model_track'] = true;
window.FLATTENED['tracks.timeline_viewport_track'] = true;
window.FLATTENED['timeline'] = true;
window.FLATTENED['analysis.util'] = true;
window.FLATTENED['timeline_analysis'] = true;
window.FLATTENED['overlay'] = true;
window.FLATTENED['timeline_category_filter_dialog'] = true;
window.FLATTENED['timeline_find_control'] = true;
window.FLATTENED['importer.trace_event_importer'] = true;
window.FLATTENED['importer.linux_perf.parser'] = true;
window.FLATTENED['importer.linux_perf.bus_parser'] = true;
window.FLATTENED['importer.linux_perf.clock_parser'] = true;
window.FLATTENED['importer.linux_perf.cpufreq_parser'] = true;
window.FLATTENED['importer.linux_perf.drm_parser'] = true;
window.FLATTENED['importer.linux_perf.exynos_parser'] = true;
window.FLATTENED['importer.linux_perf.gesture_parser'] = true;
window.FLATTENED['importer.linux_perf.i915_parser'] = true;
window.FLATTENED['importer.linux_perf.mali_parser'] = true;
window.FLATTENED['importer.linux_perf.power_parser'] = true;
window.FLATTENED['importer.linux_perf.sched_parser'] = true;
window.FLATTENED['importer.linux_perf.workqueue_parser'] = true;
window.FLATTENED['importer.linux_perf.android_parser'] = true;
window.FLATTENED['importer.linux_perf_importer'] = true;
window.FLATTENED['settings'] = true;
window.FLATTENED['timeline_view'] = true;
window.FLATTENED['tracing_controller'] = true;
window.FLATTENED['profiling_view'] = true;
<include src="base.js">
<include src="event_target.js">
<include src="measuring_stick.js">
<include src="timeline_filter.js">
<include src="range.js">
<include src="timeline_selection.js">
<include src="timeline_viewport.js">
<include src="ui.js">
<include src="tracks/timeline_track.js">
<include src="tracks/timeline_container_track.js">
<include src="fast_rect_renderer.js">
<include src="timeline_color_scheme.js">
<include src="tracks/timeline_canvas_based_track.js">
<include src="sorted_array_utils.js">
<include src="tracks/timeline_slice_track.js">
<include src="timeline_guid.js">
<include src="timeline_slice.js">
<include src="timeline_slice_group.js">
<include src="timeline_async_slice_group.js">
<include src="timeline_sample.js">
<include src="timeline_thread.js">
<include src="timeline_counter.js">
<include src="timeline_process_base.js">
<include src="timeline_process.js">
<include src="timeline_kernel.js">
<include src="timeline_cpu.js">
<include src="timeline_model.js">
<include src="tracks/timeline_cpu_track.js">
<include src="tracks/timeline_counter_track.js">
<include src="tracks/timeline_slice_group_track.js">
<include src="tracks/timeline_async_slice_group_track.js">
<include src="tracks/timeline_thread_track.js">
<include src="tracks/timeline_process_track.js">
<include src="tracks/timeline_model_track.js">
<include src="tracks/timeline_viewport_track.js">
<include src="timeline.js">
<include src="analysis/util.js">
<include src="timeline_analysis.js">
<include src="overlay.js">
<include src="timeline_category_filter_dialog.js">
<include src="timeline_find_control.js">
<include src="importer/trace_event_importer.js">
<include src="importer/linux_perf/parser.js">
<include src="importer/linux_perf/bus_parser.js">
<include src="importer/linux_perf/clock_parser.js">
<include src="importer/linux_perf/cpufreq_parser.js">
<include src="importer/linux_perf/drm_parser.js">
<include src="importer/linux_perf/exynos_parser.js">
<include src="importer/linux_perf/gesture_parser.js">
<include src="importer/linux_perf/i915_parser.js">
<include src="importer/linux_perf/mali_parser.js">
<include src="importer/linux_perf/power_parser.js">
<include src="importer/linux_perf/sched_parser.js">
<include src="importer/linux_perf/workqueue_parser.js">
<include src="importer/linux_perf/android_parser.js">
<include src="importer/linux_perf_importer.js">
<include src="settings.js">
<include src="timeline_view.js">
<include src="tracing_controller.js">
<include src="profiling_view.js">


var tracingController;
var profilingView;  // Made global for debugging purposes only.

document.addEventListener('DOMContentLoaded', function() {
  tracingController = new tracing.TracingController(
      chrome.send.bind(chrome));

  profilingView = document.body.querySelector('#profiling-view');
  tracing.ui.decorate(profilingView, tracing.ProfilingView);
  profilingView.tracingController = tracingController;
});
